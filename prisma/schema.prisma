generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Player {
  id            String @id @default(uuid())
  name          String
  guildMemberId String @unique /// identifica qual usuário do discord é o jogador

  teams TeamParticipation[]

  captainOf Team[] @relation("TeamCaptain")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Modality {
  id   String @id @default(uuid())
  name String @unique

  teams  Team[]
  roleId String @unique // Indica qual cargo do servidor do discord é o responsável por essa modalidade

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id   String @id @default(uuid())
  name String @unique

  players TeamParticipation[]

  captainId String?
  captain   Player? @relation("TeamCaptain", fields: [captainId], references: [id], onDelete: SetNull, onUpdate: Cascade)

  modalityId String?
  modality   Modality? @relation(fields: [modalityId], references: [id])

  roleId String @unique // Indica qual cargo do servidor do discord é o responsável por essa modalidade

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamParticipation {
  player   Player @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId String

  team   Team   @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId String

  assignedAt DateTime @default(now())

  @@id([playerId, teamId])
  @@map("player_team_memberships")
}
