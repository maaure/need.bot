generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Player {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  guildMemberId String @unique

  teams     TeamParticipation[]
  captainOf Team[]              @relation("TeamCaptain")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Modality {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  teams  Team[]
  roleId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String @unique

  players TeamParticipation[]

  captainId String? @db.ObjectId
  captain   Player? @relation("TeamCaptain", fields: [captainId], references: [id], onDelete: SetNull)

  modalityId String?   @db.ObjectId
  modality   Modality? @relation(fields: [modalityId], references: [id])

  roleId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model TeamParticipation {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  player     Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId   String   @db.ObjectId
  team       Team     @relation(fields: [teamId], references: [id], onDelete: Cascade)
  teamId     String   @db.ObjectId
  assignedAt DateTime @default(now())

  @@unique([playerId, teamId])
  @@map("player_team_memberships")
}
